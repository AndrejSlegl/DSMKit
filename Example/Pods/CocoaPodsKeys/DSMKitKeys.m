//
// Generated by CocoaPods-Keys
// on 21/02/2018
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "DSMKitKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation DSMKitKeys

  @dynamic testHost;
  @dynamic testAccount;
  @dynamic testPassword;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(DSMKitKeys *, SEL) = NULL;

  if ([key isEqualToString:@"testHost"]) {
    implementation = _podKeysfc8ef03e9736305c7d595e1a112c3d88;
  }

  if ([key isEqualToString:@"testAccount"]) {
    implementation = _podKeys8e5bc1a69015b04f22488bbb4213cee8;
  }

  if ([key isEqualToString:@"testPassword"]) {
    implementation = _podKeysfed3b61b26081849378080b34e693d2e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysfc8ef03e9736305c7d595e1a112c3d88(DSMKitKeys *self, SEL _cmd)
{
  
    
      char cString[14] = { DSMKitKeysData[918], DSMKitKeysData[536], DSMKitKeysData[430], DSMKitKeysData[882], DSMKitKeysData[202], DSMKitKeysData[843], DSMKitKeysData[514], DSMKitKeysData[58], DSMKitKeysData[326], DSMKitKeysData[495], DSMKitKeysData[574], DSMKitKeysData[403], DSMKitKeysData[20], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys8e5bc1a69015b04f22488bbb4213cee8(DSMKitKeys *self, SEL _cmd)
{
  
    
      char cString[5] = { DSMKitKeysData[863], DSMKitKeysData[217], DSMKitKeysData[17], DSMKitKeysData[13], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysfed3b61b26081849378080b34e693d2e(DSMKitKeys *self, SEL _cmd)
{
  
    
      char cString[9] = { DSMKitKeysData[543], DSMKitKeysData[510], DSMKitKeysData[565], DSMKitKeysData[454], DSMKitKeysData[46], DSMKitKeysData[874], DSMKitKeysData[221], DSMKitKeysData[937], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char DSMKitKeysData[938] = "a1SyWS5FC2lC4nntwhEg6+ucJpxefquj+Luuz0olTgdRPtg0Ubkri+kFgK.xKY5iF9XlBPsvmNNVdRzC8umIbX+zZhnh97O+p0SD8H9VZUiDF1eqgD5qkctdSMZJffXZEKM1LxNjSTWcDUhv6Qq+9fi59aJlfVXny8xNIq/abQqLQvxUVdaBIQBlyFy30dSqHM6PycsFsE2Ms63s5fKhUfqFYakZS8njQfzNh59ZHywCkNEMnEQHilDk3tQPsmfzzeDvt5jJpfo/owcZ92Z+qasTxkGdy3B+FJDhu0nhaXp50ZBKhGbpVUiv1FDdlB6tHCf8R72Pxpt0MrsENCyY+awdQaSN2ZfBHg7DAnzmnv4/oJPUp3U0VkVfNOqaKuQ0isfkNp8VE3XpnHPSyY2.Z+QNDgo0c/8ANh2BZTug6nerHw8CMmLe9UbTEwkGF82soCUpKgn2HxvC0g1Cv5+69icy0Rlu94AoemV9yDDtm+1JqdE1K6ioN7AjO0yltQhBNR9wwJG9leufBY8EybtieIIS1rMm5/EcenApCOqPCqvyJ9xwTCF23agSdLnACq8xsoU4J4mOtyBWEM9cP9bRhiFB/j9PV/Ia7xjR0c6/LPhagEgrERtCrvXcATD6K9Qmu1wJNRkyvJvn9A2wDLETZ5dblPhgVjQAvr6yy2iqHfA96I0xkvIU9A7jDOLY7blxo/pPXa8l1hyMAFNKDrsxyp3QTEUAulfPy3jSnt3Lb+zcGXxC3LGgzrV73eS4a25UfG+o4uDjje5Eji9xNPf0HDooYSgbuBSLNh4NBSHE9vjawYZoPZY/yvfRiN4ap+4TyoPTEmMa5qB3u1ELRD6l9T7YpnY5VT4c/Bai/wQDr68EO0TQs1.56btyompyF5A4sid+c9Y20ryoLNL2CXl3es2N+VW3JIlwwZCPAg==\\8";

- (NSString *)description
{
  return [@{
            @"testHost": self.testHost,
            @"testAccount": self.testAccount,
            @"testPassword": self.testPassword,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
